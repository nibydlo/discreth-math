start: s
accept: ac
reject: rj
blank: _

s 0 -> l 0 <
s 1 -> l 1 <

//put lattice
l _ -> z # <

z _ -> f 0 >

//going forward
f 0 -> f 0 >
f 1 -> f 1 >
f * -> f * >
f # -> f # >
f _ -> m _ <

//minus 1
m 1 -> r 0 <
m 0 -> r1 1 <

r 0 -> r 0 <
r 1 -> r 1 <

//minus if 1
r1 1 -> r 0 <
r1 0 -> r1 1 <
r1 * -> fw * >

fw 0 -> fw 0 >
fw 1 -> fw 1 >
fw _ -> cle _ <

cle 0 -> cle _ <
cle 1 -> cle _ <
cle * -> cle _ <
cle # -> ret _ <

ret 0 -> ret 0 <
ret 1 -> ret 1 < 
ret _ -> ac _ > 

//start summing
r * -> su * <
su 0' -> su 0' <
su 1' -> su 1' <
su 0 -> p0 0' <
su 1 -> p1 1' <
su # -> clr # <

// clear reverse
clr 0' -> clr 0 <
clr 1' -> clr 1 <
clr 0 -> fcl 0 >
clr 1 -> fcl 1 >
clr _ -> fcl _ >

//forward clear
fcl 0' -> fcl 0 >
fcl 1' -> fcl 1 >
fcl 0 -> fcl 0 >
fcl 1 -> fcl 1 >
fcl # -> fcl # >
fcl * -> f * >

// plus 0
p0 0 -> p0 0 <
p0 1 -> p0 1 <
p0 # -> p00 # <

// plus 0 after #
p00 0' -> p00 0' <
p00 1' -> p00 1' <
p00 0 -> fs 0' >
p00 1 -> fs 1' >
p00 _ -> fs 0' >

// plus 1
p1 0 -> p1 0 <
p1 1 -> p1 1 <
p1 # -> p11 # <

// plus 1 after #
p11 0' -> p11 0' <
p11 1' -> p11 1' <
p11 0 -> fs 1' >
p11 _ -> fs 1' >
p11 1 -> p12 0' <

p12 0 -> fs 1 >
p12 1 -> p12 0 <
p12 _ -> fs 1 >

// forward in sum
fs 0 -> fs 0 >
fs 1 -> fs 1 >
fs 0' -> fs 0' >
fs 1' -> fs 1' >
fs # -> fs # >
fs * -> su * <



